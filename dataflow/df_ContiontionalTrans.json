{
	"name": "df_ContiontionalTrans",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "EmployeeData",
						"type": "DatasetReference"
					},
					"name": "EmpData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ITEmpData",
						"type": "DatasetReference"
					},
					"name": "ITEmpData"
				},
				{
					"dataset": {
						"referenceName": "HrEmpData",
						"type": "DatasetReference"
					},
					"name": "HREmpData"
				},
				{
					"dataset": {
						"referenceName": "FinanceEmpData",
						"type": "DatasetReference"
					},
					"name": "FinanceEmpData"
				},
				{
					"dataset": {
						"referenceName": "OtherEmpData",
						"type": "DatasetReference"
					},
					"name": "OtherEmpData"
				}
			],
			"transformations": [
				{
					"name": "SplitOnDeparment"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPLOYEE_ID as string,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as string,",
				"          HIRE_DATE as string,",
				"          JOB_ID as string,",
				"          SALARY as string,",
				"          COMMISSION_PCT as string,",
				"          MANAGER_ID as string,",
				"          DEPARTMENT_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EmpData",
				"EmpData split(equals(DEPARTMENT_ID,'60'),",
				"     equals(DEPARTMENT_ID,'40'),",
				"     equals(DEPARTMENT_ID,'100'),",
				"     disjoint: false) ~> SplitOnDeparment@(ITEmployees, HREmployees, FinanceEmployees, OtherEmployee)",
				"SplitOnDeparment@ITEmployees sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['ITEmployeeData.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> ITEmpData",
				"SplitOnDeparment@HREmployees sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['HrEmpData.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> HREmpData",
				"SplitOnDeparment@FinanceEmployees sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['FinanceEmpData.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> FinanceEmpData",
				"SplitOnDeparment@OtherEmployee sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['OtherEmpData.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> OtherEmpData"
			]
		}
	}
}